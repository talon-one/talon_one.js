/**
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TalonOne);
  }
}(this, function(expect, TalonOne) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TalonOne.IntegrationApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('IntegrationApi', function() {
    describe('createCouponReservation', function() {
      it('should call createCouponReservation successfully', function(done) {
        //uncomment below and update the code to test createCouponReservation
        //instance.createCouponReservation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createReferral', function() {
      it('should call createReferral successfully', function(done) {
        //uncomment below and update the code to test createReferral
        //instance.createReferral(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCouponReservation', function() {
      it('should call deleteCouponReservation successfully', function(done) {
        //uncomment below and update the code to test deleteCouponReservation
        //instance.deleteCouponReservation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCustomerData', function() {
      it('should call deleteCustomerData successfully', function(done) {
        //uncomment below and update the code to test deleteCustomerData
        //instance.deleteCustomerData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReservedCoupons', function() {
      it('should call getReservedCoupons successfully', function(done) {
        //uncomment below and update the code to test getReservedCoupons
        //instance.getReservedCoupons(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReservedCustomers', function() {
      it('should call getReservedCustomers successfully', function(done) {
        //uncomment below and update the code to test getReservedCustomers
        //instance.getReservedCustomers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('trackEvent', function() {
      it('should call trackEvent successfully', function(done) {
        //uncomment below and update the code to test trackEvent
        //instance.trackEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCustomerProfile', function() {
      it('should call updateCustomerProfile successfully', function(done) {
        //uncomment below and update the code to test updateCustomerProfile
        //instance.updateCustomerProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCustomerSession', function() {
      it('should call updateCustomerSession successfully', function(done) {
        //uncomment below and update the code to test updateCustomerSession
        //instance.updateCustomerSession(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
