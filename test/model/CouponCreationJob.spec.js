/**
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TalonOne);
  }
}(this, function(expect, TalonOne) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TalonOne.CouponCreationJob();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CouponCreationJob', function() {
    it('should create an instance of CouponCreationJob', function() {
      // uncomment below and update the code to test CouponCreationJob
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be.a(TalonOne.CouponCreationJob);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property campaignId (base name: "campaignId")', function() {
      // uncomment below and update the code to test the property campaignId
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property applicationId (base name: "applicationId")', function() {
      // uncomment below and update the code to test the property applicationId
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property accountId (base name: "accountId")', function() {
      // uncomment below and update the code to test the property accountId
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property usageLimit (base name: "usageLimit")', function() {
      // uncomment below and update the code to test the property usageLimit
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property discountLimit (base name: "discountLimit")', function() {
      // uncomment below and update the code to test the property discountLimit
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "startDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property expiryDate (base name: "expiryDate")', function() {
      // uncomment below and update the code to test the property expiryDate
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property numberOfCoupons (base name: "numberOfCoupons")', function() {
      // uncomment below and update the code to test the property numberOfCoupons
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property couponSettings (base name: "couponSettings")', function() {
      // uncomment below and update the code to test the property couponSettings
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property attributes (base name: "attributes")', function() {
      // uncomment below and update the code to test the property attributes
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property batchId (base name: "batchId")', function() {
      // uncomment below and update the code to test the property batchId
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property createdAmount (base name: "createdAmount")', function() {
      // uncomment below and update the code to test the property createdAmount
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property failCount (base name: "failCount")', function() {
      // uncomment below and update the code to test the property failCount
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property errors (base name: "errors")', function() {
      // uncomment below and update the code to test the property errors
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property createdBy (base name: "createdBy")', function() {
      // uncomment below and update the code to test the property createdBy
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property communicated (base name: "communicated")', function() {
      // uncomment below and update the code to test the property communicated
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

    it('should have the property batchExecutionCount (base name: "batchExecutionCount")', function() {
      // uncomment below and update the code to test the property batchExecutionCount
      //var instane = new TalonOne.CouponCreationJob();
      //expect(instance).to.be();
    });

  });

}));
