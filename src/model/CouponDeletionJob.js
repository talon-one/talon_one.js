/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CouponDeletionFilters from './CouponDeletionFilters';

/**
 * The CouponDeletionJob model module.
 * @module model/CouponDeletionJob
 * @version .0
 */
class CouponDeletionJob {
    /**
     * Constructs a new <code>CouponDeletionJob</code>.
     * @alias module:model/CouponDeletionJob
     * @param id {Number} The internal ID of this entity.
     * @param created {Date} The time this entity was created.
     * @param applicationId {Number} The ID of the Application that owns this entity.
     * @param accountId {Number} The ID of the account that owns this entity.
     * @param filters {module:model/CouponDeletionFilters} 
     * @param status {String} The current status of this request. Possible values: - `not_ready` - `pending` - `completed` - `failed` 
     * @param failCount {Number} The number of times this job failed.
     * @param errors {Array.<String>} An array of individual problems encountered during the request.
     * @param createdBy {Number} ID of the user who created this effect.
     * @param communicated {Boolean} Indicates whether the user that created this job was notified of its final state.
     */
    constructor(id, created, applicationId, accountId, filters, status, failCount, errors, createdBy, communicated) { 
        
        CouponDeletionJob.initialize(this, id, created, applicationId, accountId, filters, status, failCount, errors, createdBy, communicated);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, created, applicationId, accountId, filters, status, failCount, errors, createdBy, communicated) { 
        obj['id'] = id;
        obj['created'] = created;
        obj['applicationId'] = applicationId;
        obj['accountId'] = accountId;
        obj['filters'] = filters;
        obj['status'] = status;
        obj['failCount'] = failCount;
        obj['errors'] = errors;
        obj['createdBy'] = createdBy;
        obj['communicated'] = communicated;
    }

    /**
     * Constructs a <code>CouponDeletionJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CouponDeletionJob} obj Optional instance to populate.
     * @return {module:model/CouponDeletionJob} The populated <code>CouponDeletionJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CouponDeletionJob();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('applicationId')) {
                obj['applicationId'] = ApiClient.convertToType(data['applicationId'], 'Number');
            }
            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'Number');
            }
            if (data.hasOwnProperty('filters')) {
                obj['filters'] = CouponDeletionFilters.constructFromObject(data['filters']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('deletedAmount')) {
                obj['deletedAmount'] = ApiClient.convertToType(data['deletedAmount'], 'Number');
            }
            if (data.hasOwnProperty('failCount')) {
                obj['failCount'] = ApiClient.convertToType(data['failCount'], 'Number');
            }
            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], ['String']);
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'Number');
            }
            if (data.hasOwnProperty('communicated')) {
                obj['communicated'] = ApiClient.convertToType(data['communicated'], 'Boolean');
            }
            if (data.hasOwnProperty('campaignIDs')) {
                obj['campaignIDs'] = ApiClient.convertToType(data['campaignIDs'], ['Number']);
            }
        }
        return obj;
    }


}

/**
 * The internal ID of this entity.
 * @member {Number} id
 */
CouponDeletionJob.prototype['id'] = undefined;

/**
 * The time this entity was created.
 * @member {Date} created
 */
CouponDeletionJob.prototype['created'] = undefined;

/**
 * The ID of the Application that owns this entity.
 * @member {Number} applicationId
 */
CouponDeletionJob.prototype['applicationId'] = undefined;

/**
 * The ID of the account that owns this entity.
 * @member {Number} accountId
 */
CouponDeletionJob.prototype['accountId'] = undefined;

/**
 * @member {module:model/CouponDeletionFilters} filters
 */
CouponDeletionJob.prototype['filters'] = undefined;

/**
 * The current status of this request. Possible values: - `not_ready` - `pending` - `completed` - `failed` 
 * @member {String} status
 */
CouponDeletionJob.prototype['status'] = undefined;

/**
 * The number of coupon codes that were already deleted for this request.
 * @member {Number} deletedAmount
 */
CouponDeletionJob.prototype['deletedAmount'] = undefined;

/**
 * The number of times this job failed.
 * @member {Number} failCount
 */
CouponDeletionJob.prototype['failCount'] = undefined;

/**
 * An array of individual problems encountered during the request.
 * @member {Array.<String>} errors
 */
CouponDeletionJob.prototype['errors'] = undefined;

/**
 * ID of the user who created this effect.
 * @member {Number} createdBy
 */
CouponDeletionJob.prototype['createdBy'] = undefined;

/**
 * Indicates whether the user that created this job was notified of its final state.
 * @member {Boolean} communicated
 */
CouponDeletionJob.prototype['communicated'] = undefined;

/**
 * @member {Array.<Number>} campaignIDs
 */
CouponDeletionJob.prototype['campaignIDs'] = undefined;






export default CouponDeletionJob;

