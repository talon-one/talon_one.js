/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Endpoint from './Endpoint';

/**
 * The CreateManagementKey model module.
 * @module model/CreateManagementKey
 * @version 5.0.0
 */
class CreateManagementKey {
    /**
     * Constructs a new <code>CreateManagementKey</code>.
     * @alias module:model/CreateManagementKey
     * @param name {String} Name for management key.
     * @param expiryDate {Date} The date the management key expires.
     * @param endpoints {Array.<module:model/Endpoint>} The list of endpoints that can be accessed with the key
     */
    constructor(name, expiryDate, endpoints) { 
        
        CreateManagementKey.initialize(this, name, expiryDate, endpoints);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, expiryDate, endpoints) { 
        obj['name'] = name;
        obj['expiryDate'] = expiryDate;
        obj['endpoints'] = endpoints;
    }

    /**
     * Constructs a <code>CreateManagementKey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateManagementKey} obj Optional instance to populate.
     * @return {module:model/CreateManagementKey} The populated <code>CreateManagementKey</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateManagementKey();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('expiryDate')) {
                obj['expiryDate'] = ApiClient.convertToType(data['expiryDate'], 'Date');
            }
            if (data.hasOwnProperty('endpoints')) {
                obj['endpoints'] = ApiClient.convertToType(data['endpoints'], [Endpoint]);
            }
            if (data.hasOwnProperty('allowedApplicationIds')) {
                obj['allowedApplicationIds'] = ApiClient.convertToType(data['allowedApplicationIds'], ['Number']);
            }
        }
        return obj;
    }


}

/**
 * Name for management key.
 * @member {String} name
 */
CreateManagementKey.prototype['name'] = undefined;

/**
 * The date the management key expires.
 * @member {Date} expiryDate
 */
CreateManagementKey.prototype['expiryDate'] = undefined;

/**
 * The list of endpoints that can be accessed with the key
 * @member {Array.<module:model/Endpoint>} endpoints
 */
CreateManagementKey.prototype['endpoints'] = undefined;

/**
 * A list of Application IDs that you can access with the management key. An empty or missing list means the management key can be used for all Applications in the account. 
 * @member {Array.<Number>} allowedApplicationIds
 */
CreateManagementKey.prototype['allowedApplicationIds'] = undefined;






export default CreateManagementKey;

