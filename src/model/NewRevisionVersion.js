/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CodeGeneratorSettings from './CodeGeneratorSettings';
import LimitConfig from './LimitConfig';

/**
 * The NewRevisionVersion model module.
 * @module model/NewRevisionVersion
 * @version .0
 */
class NewRevisionVersion {
    /**
     * Constructs a new <code>NewRevisionVersion</code>.
     * @alias module:model/NewRevisionVersion
     */
    constructor() { 
        
        NewRevisionVersion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NewRevisionVersion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NewRevisionVersion} obj Optional instance to populate.
     * @return {module:model/NewRevisionVersion} The populated <code>NewRevisionVersion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NewRevisionVersion();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], Object);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('activeRulesetId')) {
                obj['activeRulesetId'] = ApiClient.convertToType(data['activeRulesetId'], 'Number');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('couponSettings')) {
                obj['couponSettings'] = CodeGeneratorSettings.constructFromObject(data['couponSettings']);
            }
            if (data.hasOwnProperty('referralSettings')) {
                obj['referralSettings'] = CodeGeneratorSettings.constructFromObject(data['referralSettings']);
            }
            if (data.hasOwnProperty('limits')) {
                obj['limits'] = ApiClient.convertToType(data['limits'], [LimitConfig]);
            }
            if (data.hasOwnProperty('features')) {
                obj['features'] = ApiClient.convertToType(data['features'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * A user-facing name for this campaign.
 * @member {String} name
 */
NewRevisionVersion.prototype['name'] = undefined;

/**
 * Timestamp when the campaign will become active.
 * @member {Date} startTime
 */
NewRevisionVersion.prototype['startTime'] = undefined;

/**
 * Timestamp when the campaign will become inactive.
 * @member {Date} endTime
 */
NewRevisionVersion.prototype['endTime'] = undefined;

/**
 * Arbitrary properties associated with this campaign.
 * @member {Object} attributes
 */
NewRevisionVersion.prototype['attributes'] = undefined;

/**
 * A detailed description of the campaign.
 * @member {String} description
 */
NewRevisionVersion.prototype['description'] = undefined;

/**
 * The ID of the ruleset this campaign template will use.
 * @member {Number} activeRulesetId
 */
NewRevisionVersion.prototype['activeRulesetId'] = undefined;

/**
 * A list of tags for the campaign template.
 * @member {Array.<String>} tags
 */
NewRevisionVersion.prototype['tags'] = undefined;

/**
 * @member {module:model/CodeGeneratorSettings} couponSettings
 */
NewRevisionVersion.prototype['couponSettings'] = undefined;

/**
 * @member {module:model/CodeGeneratorSettings} referralSettings
 */
NewRevisionVersion.prototype['referralSettings'] = undefined;

/**
 * The set of limits that will operate for this campaign version.
 * @member {Array.<module:model/LimitConfig>} limits
 */
NewRevisionVersion.prototype['limits'] = undefined;

/**
 * A list of features for the campaign template.
 * @member {Array.<module:model/NewRevisionVersion.FeaturesEnum>} features
 */
NewRevisionVersion.prototype['features'] = undefined;





/**
 * Allowed values for the <code>features</code> property.
 * @enum {String}
 * @readonly
 */
NewRevisionVersion['FeaturesEnum'] = {

    /**
     * value: "coupons"
     * @const
     */
    "coupons": "coupons",

    /**
     * value: "referrals"
     * @const
     */
    "referrals": "referrals",

    /**
     * value: "loyalty"
     * @const
     */
    "loyalty": "loyalty",

    /**
     * value: "giveaways"
     * @const
     */
    "giveaways": "giveaways",

    /**
     * value: "strikethrough"
     * @const
     */
    "strikethrough": "strikethrough",

    /**
     * value: "achievements"
     * @const
     */
    "achievements": "achievements"
};



export default NewRevisionVersion;

