/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CampaignVersions model module.
 * @module model/CampaignVersions
 * @version 12.0.0
 */
class CampaignVersions {
    /**
     * Constructs a new <code>CampaignVersions</code>.
     * @alias module:model/CampaignVersions
     */
    constructor() { 
        
        CampaignVersions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CampaignVersions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CampaignVersions} obj Optional instance to populate.
     * @return {module:model/CampaignVersions} The populated <code>CampaignVersions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CampaignVersions();

            if (data.hasOwnProperty('revisionFrontendState')) {
                obj['revisionFrontendState'] = ApiClient.convertToType(data['revisionFrontendState'], 'String');
            }
            if (data.hasOwnProperty('activeRevisionId')) {
                obj['activeRevisionId'] = ApiClient.convertToType(data['activeRevisionId'], 'Number');
            }
            if (data.hasOwnProperty('activeRevisionVersionId')) {
                obj['activeRevisionVersionId'] = ApiClient.convertToType(data['activeRevisionVersionId'], 'Number');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('currentRevisionId')) {
                obj['currentRevisionId'] = ApiClient.convertToType(data['currentRevisionId'], 'Number');
            }
            if (data.hasOwnProperty('currentRevisionVersionId')) {
                obj['currentRevisionVersionId'] = ApiClient.convertToType(data['currentRevisionVersionId'], 'Number');
            }
            if (data.hasOwnProperty('stageRevision')) {
                obj['stageRevision'] = ApiClient.convertToType(data['stageRevision'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * The campaign revision state displayed in the Campaign Manager.
 * @member {module:model/CampaignVersions.RevisionFrontendStateEnum} revisionFrontendState
 */
CampaignVersions.prototype['revisionFrontendState'] = undefined;

/**
 * ID of the revision that was last activated on this campaign. 
 * @member {Number} activeRevisionId
 */
CampaignVersions.prototype['activeRevisionId'] = undefined;

/**
 * ID of the revision version that is active on the campaign. 
 * @member {Number} activeRevisionVersionId
 */
CampaignVersions.prototype['activeRevisionVersionId'] = undefined;

/**
 * Incrementing number representing how many revisions have been activated on this campaign, starts from 0 for a new campaign. 
 * @member {Number} version
 */
CampaignVersions.prototype['version'] = undefined;

/**
 * ID of the revision currently being modified for the campaign. 
 * @member {Number} currentRevisionId
 */
CampaignVersions.prototype['currentRevisionId'] = undefined;

/**
 * ID of the latest version applied on the current revision. 
 * @member {Number} currentRevisionVersionId
 */
CampaignVersions.prototype['currentRevisionVersionId'] = undefined;

/**
 * Flag for determining whether we use current revision when sending requests with staging API key. 
 * @member {Boolean} stageRevision
 * @default false
 */
CampaignVersions.prototype['stageRevision'] = false;





/**
 * Allowed values for the <code>revisionFrontendState</code> property.
 * @enum {String}
 * @readonly
 */
CampaignVersions['RevisionFrontendStateEnum'] = {

    /**
     * value: "revised"
     * @const
     */
    "revised": "revised",

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending"
};



export default CampaignVersions;

