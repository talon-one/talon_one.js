/**
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TemplateArgDef from './TemplateArgDef';

/**
 * The Webhook model module.
 * @module model/Webhook
 * @version 4.1.1
 */
class Webhook {
    /**
     * Constructs a new <code>Webhook</code>.
     * 
     * @alias module:model/Webhook
     * @param id {Number} Unique ID for this entity.
     * @param created {Date} The exact moment this entity was created.
     * @param modified {Date} The exact moment this entity was last modified.
     * @param applicationIds {Array.<Number>} The IDs of the applications that are related to this entity. The IDs of the applications that are related to this entity.
     * @param title {String} Friendly title for this webhook
     * @param verb {module:model/Webhook.VerbEnum} API method for this webhook
     * @param url {String} API url (supports templating using parameters) for this webhook
     * @param headers {Array.<String>} List of API HTTP headers for this webhook
     * @param params {Array.<module:model/TemplateArgDef>} Array of template argument definitions
     * @param enabled {Boolean} Enables or disables webhook from showing in rule builder
     */
    constructor(id, created, modified, applicationIds, title, verb, url, headers, params, enabled) { 
        
        Webhook.initialize(this, id, created, modified, applicationIds, title, verb, url, headers, params, enabled);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, created, modified, applicationIds, title, verb, url, headers, params, enabled) { 
        obj['id'] = id;
        obj['created'] = created;
        obj['modified'] = modified;
        obj['applicationIds'] = applicationIds;
        obj['title'] = title;
        obj['verb'] = verb;
        obj['url'] = url;
        obj['headers'] = headers;
        obj['params'] = params;
        obj['enabled'] = enabled;
    }

    /**
     * Constructs a <code>Webhook</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Webhook} obj Optional instance to populate.
     * @return {module:model/Webhook} The populated <code>Webhook</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Webhook();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('modified')) {
                obj['modified'] = ApiClient.convertToType(data['modified'], 'Date');
            }
            if (data.hasOwnProperty('applicationIds')) {
                obj['applicationIds'] = ApiClient.convertToType(data['applicationIds'], ['Number']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('verb')) {
                obj['verb'] = ApiClient.convertToType(data['verb'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], ['String']);
            }
            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], 'String');
            }
            if (data.hasOwnProperty('params')) {
                obj['params'] = ApiClient.convertToType(data['params'], [TemplateArgDef]);
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * Unique ID for this entity.
 * @member {Number} id
 */
Webhook.prototype['id'] = undefined;

/**
 * The exact moment this entity was created.
 * @member {Date} created
 */
Webhook.prototype['created'] = undefined;

/**
 * The exact moment this entity was last modified.
 * @member {Date} modified
 */
Webhook.prototype['modified'] = undefined;

/**
 * The IDs of the applications that are related to this entity. The IDs of the applications that are related to this entity.
 * @member {Array.<Number>} applicationIds
 */
Webhook.prototype['applicationIds'] = undefined;

/**
 * Friendly title for this webhook
 * @member {String} title
 */
Webhook.prototype['title'] = undefined;

/**
 * API method for this webhook
 * @member {module:model/Webhook.VerbEnum} verb
 */
Webhook.prototype['verb'] = undefined;

/**
 * API url (supports templating using parameters) for this webhook
 * @member {String} url
 */
Webhook.prototype['url'] = undefined;

/**
 * List of API HTTP headers for this webhook
 * @member {Array.<String>} headers
 */
Webhook.prototype['headers'] = undefined;

/**
 * API payload (supports templating using parameters) for this webhook
 * @member {String} payload
 */
Webhook.prototype['payload'] = undefined;

/**
 * Array of template argument definitions
 * @member {Array.<module:model/TemplateArgDef>} params
 */
Webhook.prototype['params'] = undefined;

/**
 * Enables or disables webhook from showing in rule builder
 * @member {Boolean} enabled
 */
Webhook.prototype['enabled'] = undefined;





/**
 * Allowed values for the <code>verb</code> property.
 * @enum {String}
 * @readonly
 */
Webhook['VerbEnum'] = {

    /**
     * value: "POST"
     * @const
     */
    "POST": "POST",

    /**
     * value: "PUT"
     * @const
     */
    "PUT": "PUT",

    /**
     * value: "GET"
     * @const
     */
    "GET": "GET",

    /**
     * value: "DELETE"
     * @const
     */
    "DELETE": "DELETE",

    /**
     * value: "PATCH"
     * @const
     */
    "PATCH": "PATCH"
};



export default Webhook;

