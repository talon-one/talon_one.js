/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CodeGeneratorSettings from './CodeGeneratorSettings';

/**
 * The LoyaltyCardBatch model module.
 * @module model/LoyaltyCardBatch
 * @version 25.15.0
 */
class LoyaltyCardBatch {
    /**
     * Constructs a new <code>LoyaltyCardBatch</code>.
     * @alias module:model/LoyaltyCardBatch
     * @param numberOfCards {Number} Number of loyalty cards in the batch.
     */
    constructor(numberOfCards) { 
        
        LoyaltyCardBatch.initialize(this, numberOfCards);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, numberOfCards) { 
        obj['numberOfCards'] = numberOfCards;
    }

    /**
     * Constructs a <code>LoyaltyCardBatch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoyaltyCardBatch} obj Optional instance to populate.
     * @return {module:model/LoyaltyCardBatch} The populated <code>LoyaltyCardBatch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoyaltyCardBatch();

            if (data.hasOwnProperty('numberOfCards')) {
                obj['numberOfCards'] = ApiClient.convertToType(data['numberOfCards'], 'Number');
            }
            if (data.hasOwnProperty('batchId')) {
                obj['batchId'] = ApiClient.convertToType(data['batchId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('cardCodeSettings')) {
                obj['cardCodeSettings'] = CodeGeneratorSettings.constructFromObject(data['cardCodeSettings']);
            }
        }
        return obj;
    }


}

/**
 * Number of loyalty cards in the batch.
 * @member {Number} numberOfCards
 */
LoyaltyCardBatch.prototype['numberOfCards'] = undefined;

/**
 * ID of the loyalty card batch.
 * @member {String} batchId
 */
LoyaltyCardBatch.prototype['batchId'] = undefined;

/**
 * Status of the loyalty cards in the batch.
 * @member {module:model/LoyaltyCardBatch.StatusEnum} status
 * @default 'active'
 */
LoyaltyCardBatch.prototype['status'] = 'active';

/**
 * @member {module:model/CodeGeneratorSettings} cardCodeSettings
 */
LoyaltyCardBatch.prototype['cardCodeSettings'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
LoyaltyCardBatch['StatusEnum'] = {

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "inactive"
     * @const
     */
    "inactive": "inactive"
};



export default LoyaltyCardBatch;

