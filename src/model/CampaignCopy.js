/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CampaignCopy model module.
 * @module model/CampaignCopy
 * @version 5.0.1
 */
class CampaignCopy {
    /**
     * Constructs a new <code>CampaignCopy</code>.
     * @alias module:model/CampaignCopy
     * @param applicationIds {Array.<Number>} Application IDs of the applications to which a campaign should be copied to.
     */
    constructor(applicationIds) { 
        
        CampaignCopy.initialize(this, applicationIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationIds) { 
        obj['applicationIds'] = applicationIds;
    }

    /**
     * Constructs a <code>CampaignCopy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CampaignCopy} obj Optional instance to populate.
     * @return {module:model/CampaignCopy} The populated <code>CampaignCopy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CampaignCopy();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('applicationIds')) {
                obj['applicationIds'] = ApiClient.convertToType(data['applicationIds'], ['Number']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('evaluationGroupId')) {
                obj['evaluationGroupId'] = ApiClient.convertToType(data['evaluationGroupId'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Name of the copied campaign (Defaults to \"Copy of original campaign name\").
 * @member {String} name
 */
CampaignCopy.prototype['name'] = undefined;

/**
 * Application IDs of the applications to which a campaign should be copied to.
 * @member {Array.<Number>} applicationIds
 */
CampaignCopy.prototype['applicationIds'] = undefined;

/**
 * A detailed description of the campaign.
 * @member {String} description
 */
CampaignCopy.prototype['description'] = undefined;

/**
 * Timestamp when the campaign will become active.
 * @member {Date} startTime
 */
CampaignCopy.prototype['startTime'] = undefined;

/**
 * Timestamp when the campaign will become inactive.
 * @member {Date} endTime
 */
CampaignCopy.prototype['endTime'] = undefined;

/**
 * A list of tags for the campaign.
 * @member {Array.<String>} tags
 */
CampaignCopy.prototype['tags'] = undefined;

/**
 * The ID of the campaign evaluation group the campaign belongs to.
 * @member {Number} evaluationGroupId
 */
CampaignCopy.prototype['evaluationGroupId'] = undefined;






export default CampaignCopy;

