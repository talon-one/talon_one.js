/**
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.TalonOne) {
      root.TalonOne = {};
    }
    root.TalonOne.CustomerAnalytics = factory(root.TalonOne.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The CustomerAnalytics model module.
   * @module model/CustomerAnalytics
   * @version 3.0.0
   */

  /**
   * Constructs a new <code>CustomerAnalytics</code>.
   * 
   * @alias module:model/CustomerAnalytics
   * @class
   * @param acceptedCoupons {Number} Total accepted coupons for this customer
   * @param createdCoupons {Number} Total created coupons for this customer
   * @param freeItems {Number} Total free items given to this customer
   * @param totalOrders {Number} Total orders made by this customer
   * @param totalDiscountedOrders {Number} Total orders made by this customer that had a discount
   * @param totalRevenue {Number} Total Revenue across all closed sessions
   * @param totalDiscounts {Number} The sum of discounts that were given across all closed sessions
   */
  var exports = function(acceptedCoupons, createdCoupons, freeItems, totalOrders, totalDiscountedOrders, totalRevenue, totalDiscounts) {
    var _this = this;

    _this['acceptedCoupons'] = acceptedCoupons;
    _this['createdCoupons'] = createdCoupons;
    _this['freeItems'] = freeItems;
    _this['totalOrders'] = totalOrders;
    _this['totalDiscountedOrders'] = totalDiscountedOrders;
    _this['totalRevenue'] = totalRevenue;
    _this['totalDiscounts'] = totalDiscounts;
  };

  /**
   * Constructs a <code>CustomerAnalytics</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CustomerAnalytics} obj Optional instance to populate.
   * @return {module:model/CustomerAnalytics} The populated <code>CustomerAnalytics</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('acceptedCoupons')) {
        obj['acceptedCoupons'] = ApiClient.convertToType(data['acceptedCoupons'], 'Number');
      }
      if (data.hasOwnProperty('createdCoupons')) {
        obj['createdCoupons'] = ApiClient.convertToType(data['createdCoupons'], 'Number');
      }
      if (data.hasOwnProperty('freeItems')) {
        obj['freeItems'] = ApiClient.convertToType(data['freeItems'], 'Number');
      }
      if (data.hasOwnProperty('totalOrders')) {
        obj['totalOrders'] = ApiClient.convertToType(data['totalOrders'], 'Number');
      }
      if (data.hasOwnProperty('totalDiscountedOrders')) {
        obj['totalDiscountedOrders'] = ApiClient.convertToType(data['totalDiscountedOrders'], 'Number');
      }
      if (data.hasOwnProperty('totalRevenue')) {
        obj['totalRevenue'] = ApiClient.convertToType(data['totalRevenue'], 'Number');
      }
      if (data.hasOwnProperty('totalDiscounts')) {
        obj['totalDiscounts'] = ApiClient.convertToType(data['totalDiscounts'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Total accepted coupons for this customer
   * @member {Number} acceptedCoupons
   */
  exports.prototype['acceptedCoupons'] = undefined;
  /**
   * Total created coupons for this customer
   * @member {Number} createdCoupons
   */
  exports.prototype['createdCoupons'] = undefined;
  /**
   * Total free items given to this customer
   * @member {Number} freeItems
   */
  exports.prototype['freeItems'] = undefined;
  /**
   * Total orders made by this customer
   * @member {Number} totalOrders
   */
  exports.prototype['totalOrders'] = undefined;
  /**
   * Total orders made by this customer that had a discount
   * @member {Number} totalDiscountedOrders
   */
  exports.prototype['totalDiscountedOrders'] = undefined;
  /**
   * Total Revenue across all closed sessions
   * @member {Number} totalRevenue
   */
  exports.prototype['totalRevenue'] = undefined;
  /**
   * The sum of discounts that were given across all closed sessions
   * @member {Number} totalDiscounts
   */
  exports.prototype['totalDiscounts'] = undefined;



  return exports;
}));


