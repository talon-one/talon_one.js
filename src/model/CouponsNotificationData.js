/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExtendedCoupon from './ExtendedCoupon';

/**
 * The CouponsNotificationData model module.
 * @module model/CouponsNotificationData
 * @version .0
 */
class CouponsNotificationData {
    /**
     * Constructs a new <code>CouponsNotificationData</code>.
     * @alias module:model/CouponsNotificationData
     * @param typeOfChange {String} The type of change that occurred.
     * @param operation {String} The operation performed.
     * @param employeeName {String} The name of the employee associated with the operation.
     */
    constructor(typeOfChange, operation, employeeName) { 
        
        CouponsNotificationData.initialize(this, typeOfChange, operation, employeeName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, typeOfChange, operation, employeeName) { 
        obj['TypeOfChange'] = typeOfChange;
        obj['Operation'] = operation;
        obj['EmployeeName'] = employeeName;
    }

    /**
     * Constructs a <code>CouponsNotificationData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CouponsNotificationData} obj Optional instance to populate.
     * @return {module:model/CouponsNotificationData} The populated <code>CouponsNotificationData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CouponsNotificationData();

            if (data.hasOwnProperty('TypeOfChange')) {
                obj['TypeOfChange'] = ApiClient.convertToType(data['TypeOfChange'], 'String');
            }
            if (data.hasOwnProperty('Operation')) {
                obj['Operation'] = ApiClient.convertToType(data['Operation'], 'String');
            }
            if (data.hasOwnProperty('EmployeeName')) {
                obj['EmployeeName'] = ApiClient.convertToType(data['EmployeeName'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], [ExtendedCoupon]);
            }
            if (data.hasOwnProperty('totalResultSize')) {
                obj['totalResultSize'] = ApiClient.convertToType(data['totalResultSize'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * The type of change that occurred.
 * @member {String} TypeOfChange
 */
CouponsNotificationData.prototype['TypeOfChange'] = undefined;

/**
 * The operation performed.
 * @member {String} Operation
 */
CouponsNotificationData.prototype['Operation'] = undefined;

/**
 * The name of the employee associated with the operation.
 * @member {String} EmployeeName
 */
CouponsNotificationData.prototype['EmployeeName'] = undefined;

/**
 * A list of extended coupon data.
 * @member {Array.<module:model/ExtendedCoupon>} data
 */
CouponsNotificationData.prototype['data'] = undefined;

/**
 * @member {Number} totalResultSize
 */
CouponsNotificationData.prototype['totalResultSize'] = undefined;






export default CouponsNotificationData;

