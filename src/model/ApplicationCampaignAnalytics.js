/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnalyticsDataPointWithTrend from './AnalyticsDataPointWithTrend';
import AnalyticsDataPointWithTrendAndInfluencedRate from './AnalyticsDataPointWithTrendAndInfluencedRate';
import AnalyticsDataPointWithTrendAndUplift from './AnalyticsDataPointWithTrendAndUplift';

/**
 * The ApplicationCampaignAnalytics model module.
 * @module model/ApplicationCampaignAnalytics
 * @version 12.0.0
 */
class ApplicationCampaignAnalytics {
    /**
     * Constructs a new <code>ApplicationCampaignAnalytics</code>.
     * @alias module:model/ApplicationCampaignAnalytics
     * @param startTime {Date} The start of the aggregation time frame in UTC.
     * @param endTime {Date} The end of the aggregation time frame in UTC.
     * @param campaignId {Number} The ID of the campaign.
     * @param campaignName {String} The name of the campaign.
     * @param campaignTags {Array.<String>} A list of tags for the campaign.
     * @param campaignState {module:model/ApplicationCampaignAnalytics.CampaignStateEnum} The state of the campaign.  **Note:** A disabled or archived campaign is not evaluated for rules or coupons. 
     */
    constructor(startTime, endTime, campaignId, campaignName, campaignTags, campaignState) { 
        
        ApplicationCampaignAnalytics.initialize(this, startTime, endTime, campaignId, campaignName, campaignTags, campaignState);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, startTime, endTime, campaignId, campaignName, campaignTags, campaignState) { 
        obj['startTime'] = startTime;
        obj['endTime'] = endTime;
        obj['campaignId'] = campaignId;
        obj['campaignName'] = campaignName;
        obj['campaignTags'] = campaignTags;
        obj['campaignState'] = campaignState;
    }

    /**
     * Constructs a <code>ApplicationCampaignAnalytics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationCampaignAnalytics} obj Optional instance to populate.
     * @return {module:model/ApplicationCampaignAnalytics} The populated <code>ApplicationCampaignAnalytics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationCampaignAnalytics();

            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('campaignId')) {
                obj['campaignId'] = ApiClient.convertToType(data['campaignId'], 'Number');
            }
            if (data.hasOwnProperty('campaignName')) {
                obj['campaignName'] = ApiClient.convertToType(data['campaignName'], 'String');
            }
            if (data.hasOwnProperty('campaignTags')) {
                obj['campaignTags'] = ApiClient.convertToType(data['campaignTags'], ['String']);
            }
            if (data.hasOwnProperty('campaignState')) {
                obj['campaignState'] = ApiClient.convertToType(data['campaignState'], 'String');
            }
            if (data.hasOwnProperty('totalRevenue')) {
                obj['totalRevenue'] = AnalyticsDataPointWithTrendAndInfluencedRate.constructFromObject(data['totalRevenue']);
            }
            if (data.hasOwnProperty('sessionsCount')) {
                obj['sessionsCount'] = AnalyticsDataPointWithTrendAndInfluencedRate.constructFromObject(data['sessionsCount']);
            }
            if (data.hasOwnProperty('avgItemsPerSession')) {
                obj['avgItemsPerSession'] = AnalyticsDataPointWithTrendAndUplift.constructFromObject(data['avgItemsPerSession']);
            }
            if (data.hasOwnProperty('avgSessionValue')) {
                obj['avgSessionValue'] = AnalyticsDataPointWithTrendAndUplift.constructFromObject(data['avgSessionValue']);
            }
            if (data.hasOwnProperty('totalDiscounts')) {
                obj['totalDiscounts'] = AnalyticsDataPointWithTrend.constructFromObject(data['totalDiscounts']);
            }
            if (data.hasOwnProperty('couponsCount')) {
                obj['couponsCount'] = AnalyticsDataPointWithTrend.constructFromObject(data['couponsCount']);
            }
        }
        return obj;
    }


}

/**
 * The start of the aggregation time frame in UTC.
 * @member {Date} startTime
 */
ApplicationCampaignAnalytics.prototype['startTime'] = undefined;

/**
 * The end of the aggregation time frame in UTC.
 * @member {Date} endTime
 */
ApplicationCampaignAnalytics.prototype['endTime'] = undefined;

/**
 * The ID of the campaign.
 * @member {Number} campaignId
 */
ApplicationCampaignAnalytics.prototype['campaignId'] = undefined;

/**
 * The name of the campaign.
 * @member {String} campaignName
 */
ApplicationCampaignAnalytics.prototype['campaignName'] = undefined;

/**
 * A list of tags for the campaign.
 * @member {Array.<String>} campaignTags
 */
ApplicationCampaignAnalytics.prototype['campaignTags'] = undefined;

/**
 * The state of the campaign.  **Note:** A disabled or archived campaign is not evaluated for rules or coupons. 
 * @member {module:model/ApplicationCampaignAnalytics.CampaignStateEnum} campaignState
 */
ApplicationCampaignAnalytics.prototype['campaignState'] = undefined;

/**
 * @member {module:model/AnalyticsDataPointWithTrendAndInfluencedRate} totalRevenue
 */
ApplicationCampaignAnalytics.prototype['totalRevenue'] = undefined;

/**
 * @member {module:model/AnalyticsDataPointWithTrendAndInfluencedRate} sessionsCount
 */
ApplicationCampaignAnalytics.prototype['sessionsCount'] = undefined;

/**
 * @member {module:model/AnalyticsDataPointWithTrendAndUplift} avgItemsPerSession
 */
ApplicationCampaignAnalytics.prototype['avgItemsPerSession'] = undefined;

/**
 * @member {module:model/AnalyticsDataPointWithTrendAndUplift} avgSessionValue
 */
ApplicationCampaignAnalytics.prototype['avgSessionValue'] = undefined;

/**
 * @member {module:model/AnalyticsDataPointWithTrend} totalDiscounts
 */
ApplicationCampaignAnalytics.prototype['totalDiscounts'] = undefined;

/**
 * @member {module:model/AnalyticsDataPointWithTrend} couponsCount
 */
ApplicationCampaignAnalytics.prototype['couponsCount'] = undefined;





/**
 * Allowed values for the <code>campaignState</code> property.
 * @enum {String}
 * @readonly
 */
ApplicationCampaignAnalytics['CampaignStateEnum'] = {

    /**
     * value: "expired"
     * @const
     */
    "expired": "expired",

    /**
     * value: "scheduled"
     * @const
     */
    "scheduled": "scheduled",

    /**
     * value: "running"
     * @const
     */
    "running": "running",

    /**
     * value: "disabled"
     * @const
     */
    "disabled": "disabled",

    /**
     * value: "archived"
     * @const
     */
    "archived": "archived",

    /**
     * value: "staged"
     * @const
     */
    "staged": "staged"
};



export default ApplicationCampaignAnalytics;

