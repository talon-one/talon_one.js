/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CampaignEvaluationPosition model module.
 * @module model/CampaignEvaluationPosition
 * @version 5.0.1
 */
class CampaignEvaluationPosition {
    /**
     * Constructs a new <code>CampaignEvaluationPosition</code>.
     * The campaign position within the evaluation tree.
     * @alias module:model/CampaignEvaluationPosition
     * @param groupId {Number} The ID of the campaign evaluation group the campaign belongs to.
     * @param groupName {String} The name of the campaign evaluation group the campaign belongs to.
     * @param position {Number} The position of the campaign node in its parent group.
     */
    constructor(groupId, groupName, position) { 
        
        CampaignEvaluationPosition.initialize(this, groupId, groupName, position);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, groupId, groupName, position) { 
        obj['groupId'] = groupId;
        obj['groupName'] = groupName;
        obj['position'] = position;
    }

    /**
     * Constructs a <code>CampaignEvaluationPosition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CampaignEvaluationPosition} obj Optional instance to populate.
     * @return {module:model/CampaignEvaluationPosition} The populated <code>CampaignEvaluationPosition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CampaignEvaluationPosition();

            if (data.hasOwnProperty('groupId')) {
                obj['groupId'] = ApiClient.convertToType(data['groupId'], 'Number');
            }
            if (data.hasOwnProperty('groupName')) {
                obj['groupName'] = ApiClient.convertToType(data['groupName'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * The ID of the campaign evaluation group the campaign belongs to.
 * @member {Number} groupId
 */
CampaignEvaluationPosition.prototype['groupId'] = undefined;

/**
 * The name of the campaign evaluation group the campaign belongs to.
 * @member {String} groupName
 */
CampaignEvaluationPosition.prototype['groupName'] = undefined;

/**
 * The position of the campaign node in its parent group.
 * @member {Number} position
 */
CampaignEvaluationPosition.prototype['position'] = undefined;






export default CampaignEvaluationPosition;

