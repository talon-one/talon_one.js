/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApplicationApiHealth model module.
 * @module model/ApplicationApiHealth
 * @version 5.0.1
 */
class ApplicationApiHealth {
    /**
     * Constructs a new <code>ApplicationApiHealth</code>.
     * Report of health of the API connection of an application.
     * @alias module:model/ApplicationApiHealth
     * @param summary {module:model/ApplicationApiHealth.SummaryEnum} One-word summary of the health of the API connection of an application. Possible values are: - `OK`: The Application has received only successful API requests in the last 5 minutes. - `WARNING`: The Application received at least one failed request in the last 50 minutes. - `ERROR`: More than 50% of received requests failed. - `CRITICAL`: All received requests failed. - `NONE`: During the last 5 minutes, the Application hasn't recorded any integration API requests. 
     * @param lastUsed {Date} time of last request relevant to the API health test.
     */
    constructor(summary, lastUsed) { 
        
        ApplicationApiHealth.initialize(this, summary, lastUsed);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, summary, lastUsed) { 
        obj['summary'] = summary;
        obj['lastUsed'] = lastUsed;
    }

    /**
     * Constructs a <code>ApplicationApiHealth</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationApiHealth} obj Optional instance to populate.
     * @return {module:model/ApplicationApiHealth} The populated <code>ApplicationApiHealth</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationApiHealth();

            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
            }
            if (data.hasOwnProperty('lastUsed')) {
                obj['lastUsed'] = ApiClient.convertToType(data['lastUsed'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * One-word summary of the health of the API connection of an application. Possible values are: - `OK`: The Application has received only successful API requests in the last 5 minutes. - `WARNING`: The Application received at least one failed request in the last 50 minutes. - `ERROR`: More than 50% of received requests failed. - `CRITICAL`: All received requests failed. - `NONE`: During the last 5 minutes, the Application hasn't recorded any integration API requests. 
 * @member {module:model/ApplicationApiHealth.SummaryEnum} summary
 */
ApplicationApiHealth.prototype['summary'] = undefined;

/**
 * time of last request relevant to the API health test.
 * @member {Date} lastUsed
 */
ApplicationApiHealth.prototype['lastUsed'] = undefined;





/**
 * Allowed values for the <code>summary</code> property.
 * @enum {String}
 * @readonly
 */
ApplicationApiHealth['SummaryEnum'] = {

    /**
     * value: "OK"
     * @const
     */
    "OK": "OK",

    /**
     * value: "WARNING"
     * @const
     */
    "WARNING": "WARNING",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR",

    /**
     * value: "CRITICAL"
     * @const
     */
    "CRITICAL": "CRITICAL",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE"
};



export default ApplicationApiHealth;

