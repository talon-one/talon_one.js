/**
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Campaign from './Campaign';
import Coupon from './Coupon';
import CustomerProfile from './CustomerProfile';
import CustomerSessionV2 from './CustomerSessionV2';
import Effect from './Effect';
import Event from './Event';
import Loyalty from './Loyalty';
import Referral from './Referral';

/**
 * The IntegrationStateV2 model module.
 * @module model/IntegrationStateV2
 * @version 4.0.0
 */
class IntegrationStateV2 {
    /**
     * Constructs a new <code>IntegrationStateV2</code>.
     * Contains all entities that might interest Talon.One integrations. This is the response type returned by the V2 PUT customer_session endpoint 
     * @alias module:model/IntegrationStateV2
     * @param effects {Array.<module:model/Effect>} 
     * @param createdCoupons {Array.<module:model/Coupon>} 
     * @param createdReferrals {Array.<module:model/Referral>} 
     */
    constructor(effects, createdCoupons, createdReferrals) { 
        
        IntegrationStateV2.initialize(this, effects, createdCoupons, createdReferrals);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, effects, createdCoupons, createdReferrals) { 
        obj['effects'] = effects;
        obj['createdCoupons'] = createdCoupons;
        obj['createdReferrals'] = createdReferrals;
    }

    /**
     * Constructs a <code>IntegrationStateV2</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntegrationStateV2} obj Optional instance to populate.
     * @return {module:model/IntegrationStateV2} The populated <code>IntegrationStateV2</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntegrationStateV2();

            if (data.hasOwnProperty('customerSession')) {
                obj['customerSession'] = CustomerSessionV2.constructFromObject(data['customerSession']);
            }
            if (data.hasOwnProperty('customerProfile')) {
                obj['customerProfile'] = CustomerProfile.constructFromObject(data['customerProfile']);
            }
            if (data.hasOwnProperty('event')) {
                obj['event'] = Event.constructFromObject(data['event']);
            }
            if (data.hasOwnProperty('loyalty')) {
                obj['loyalty'] = Loyalty.constructFromObject(data['loyalty']);
            }
            if (data.hasOwnProperty('referral')) {
                obj['referral'] = Referral.constructFromObject(data['referral']);
            }
            if (data.hasOwnProperty('coupons')) {
                obj['coupons'] = ApiClient.convertToType(data['coupons'], [Coupon]);
            }
            if (data.hasOwnProperty('triggeredCampaigns')) {
                obj['triggeredCampaigns'] = ApiClient.convertToType(data['triggeredCampaigns'], [Campaign]);
            }
            if (data.hasOwnProperty('effects')) {
                obj['effects'] = ApiClient.convertToType(data['effects'], [Effect]);
            }
            if (data.hasOwnProperty('createdCoupons')) {
                obj['createdCoupons'] = ApiClient.convertToType(data['createdCoupons'], [Coupon]);
            }
            if (data.hasOwnProperty('createdReferrals')) {
                obj['createdReferrals'] = ApiClient.convertToType(data['createdReferrals'], [Referral]);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/CustomerSessionV2} customerSession
 */
IntegrationStateV2.prototype['customerSession'] = undefined;

/**
 * @member {module:model/CustomerProfile} customerProfile
 */
IntegrationStateV2.prototype['customerProfile'] = undefined;

/**
 * @member {module:model/Event} event
 */
IntegrationStateV2.prototype['event'] = undefined;

/**
 * @member {module:model/Loyalty} loyalty
 */
IntegrationStateV2.prototype['loyalty'] = undefined;

/**
 * @member {module:model/Referral} referral
 */
IntegrationStateV2.prototype['referral'] = undefined;

/**
 * @member {Array.<module:model/Coupon>} coupons
 */
IntegrationStateV2.prototype['coupons'] = undefined;

/**
 * @member {Array.<module:model/Campaign>} triggeredCampaigns
 */
IntegrationStateV2.prototype['triggeredCampaigns'] = undefined;

/**
 * @member {Array.<module:model/Effect>} effects
 */
IntegrationStateV2.prototype['effects'] = undefined;

/**
 * @member {Array.<module:model/Coupon>} createdCoupons
 */
IntegrationStateV2.prototype['createdCoupons'] = undefined;

/**
 * @member {Array.<module:model/Referral>} createdReferrals
 */
IntegrationStateV2.prototype['createdReferrals'] = undefined;






export default IntegrationStateV2;

