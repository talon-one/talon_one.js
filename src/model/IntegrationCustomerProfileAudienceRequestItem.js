/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IntegrationCustomerProfileAudienceRequestItem model module.
 * @module model/IntegrationCustomerProfileAudienceRequestItem
 * @version 25.15.0
 */
class IntegrationCustomerProfileAudienceRequestItem {
    /**
     * Constructs a new <code>IntegrationCustomerProfileAudienceRequestItem</code>.
     * @alias module:model/IntegrationCustomerProfileAudienceRequestItem
     * @param action {module:model/IntegrationCustomerProfileAudienceRequestItem.ActionEnum} Defines the action to perform: - `add`: Adds the customer profile to the audience.    **Note**: If the customer profile does not exist, it will be created. The profile will not be visible in any Application   until a session or profile update is received for that profile. - `delete`: Removes the customer profile from the audience. 
     * @param profileIntegrationId {String} The ID of this customer profile in the third-party integration.
     * @param integrationId {String} The ID of this audience in the third-party integration.
     */
    constructor(action, profileIntegrationId, integrationId) { 
        
        IntegrationCustomerProfileAudienceRequestItem.initialize(this, action, profileIntegrationId, integrationId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action, profileIntegrationId, integrationId) { 
        obj['action'] = action;
        obj['profileIntegrationId'] = profileIntegrationId;
        obj['integrationId'] = integrationId;
    }

    /**
     * Constructs a <code>IntegrationCustomerProfileAudienceRequestItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntegrationCustomerProfileAudienceRequestItem} obj Optional instance to populate.
     * @return {module:model/IntegrationCustomerProfileAudienceRequestItem} The populated <code>IntegrationCustomerProfileAudienceRequestItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntegrationCustomerProfileAudienceRequestItem();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('profileIntegrationId')) {
                obj['profileIntegrationId'] = ApiClient.convertToType(data['profileIntegrationId'], 'String');
            }
            if (data.hasOwnProperty('integrationId')) {
                obj['integrationId'] = ApiClient.convertToType(data['integrationId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Defines the action to perform: - `add`: Adds the customer profile to the audience.    **Note**: If the customer profile does not exist, it will be created. The profile will not be visible in any Application   until a session or profile update is received for that profile. - `delete`: Removes the customer profile from the audience. 
 * @member {module:model/IntegrationCustomerProfileAudienceRequestItem.ActionEnum} action
 */
IntegrationCustomerProfileAudienceRequestItem.prototype['action'] = undefined;

/**
 * The ID of this customer profile in the third-party integration.
 * @member {String} profileIntegrationId
 */
IntegrationCustomerProfileAudienceRequestItem.prototype['profileIntegrationId'] = undefined;

/**
 * The ID of this audience in the third-party integration.
 * @member {String} integrationId
 */
IntegrationCustomerProfileAudienceRequestItem.prototype['integrationId'] = undefined;





/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
IntegrationCustomerProfileAudienceRequestItem['ActionEnum'] = {

    /**
     * value: "add"
     * @const
     */
    "add": "add",

    /**
     * value: "delete"
     * @const
     */
    "delete": "delete"
};



export default IntegrationCustomerProfileAudienceRequestItem;

