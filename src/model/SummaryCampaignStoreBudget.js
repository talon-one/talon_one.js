/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SummaryCampaignStoreBudget model module.
 * @module model/SummaryCampaignStoreBudget
 * @version .0
 */
class SummaryCampaignStoreBudget {
    /**
     * Constructs a new <code>SummaryCampaignStoreBudget</code>.
     * @alias module:model/SummaryCampaignStoreBudget
     * @param action {module:model/SummaryCampaignStoreBudget.ActionEnum} 
     * @param storeCount {Number} 
     * @param imported {Boolean} 
     */
    constructor(action, storeCount, imported) { 
        
        SummaryCampaignStoreBudget.initialize(this, action, storeCount, imported);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action, storeCount, imported) { 
        obj['action'] = action;
        obj['storeCount'] = storeCount;
        obj['imported'] = imported;
    }

    /**
     * Constructs a <code>SummaryCampaignStoreBudget</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SummaryCampaignStoreBudget} obj Optional instance to populate.
     * @return {module:model/SummaryCampaignStoreBudget} The populated <code>SummaryCampaignStoreBudget</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SummaryCampaignStoreBudget();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('period')) {
                obj['period'] = ApiClient.convertToType(data['period'], 'String');
            }
            if (data.hasOwnProperty('storeCount')) {
                obj['storeCount'] = ApiClient.convertToType(data['storeCount'], 'Number');
            }
            if (data.hasOwnProperty('imported')) {
                obj['imported'] = ApiClient.convertToType(data['imported'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/SummaryCampaignStoreBudget.ActionEnum} action
 */
SummaryCampaignStoreBudget.prototype['action'] = undefined;

/**
 * @member {module:model/SummaryCampaignStoreBudget.PeriodEnum} period
 */
SummaryCampaignStoreBudget.prototype['period'] = undefined;

/**
 * @member {Number} storeCount
 */
SummaryCampaignStoreBudget.prototype['storeCount'] = undefined;

/**
 * @member {Boolean} imported
 */
SummaryCampaignStoreBudget.prototype['imported'] = undefined;





/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
SummaryCampaignStoreBudget['ActionEnum'] = {

    /**
     * value: "redeemCoupon"
     * @const
     */
    "redeemCoupon": "redeemCoupon",

    /**
     * value: "redeemReferral"
     * @const
     */
    "redeemReferral": "redeemReferral",

    /**
     * value: "setDiscount"
     * @const
     */
    "setDiscount": "setDiscount",

    /**
     * value: "setDiscountEffect"
     * @const
     */
    "setDiscountEffect": "setDiscountEffect",

    /**
     * value: "createCoupon"
     * @const
     */
    "createCoupon": "createCoupon",

    /**
     * value: "createReferral"
     * @const
     */
    "createReferral": "createReferral",

    /**
     * value: "createLoyaltyPoints"
     * @const
     */
    "createLoyaltyPoints": "createLoyaltyPoints",

    /**
     * value: "redeemLoyaltyPoints"
     * @const
     */
    "redeemLoyaltyPoints": "redeemLoyaltyPoints",

    /**
     * value: "customEffect"
     * @const
     */
    "customEffect": "customEffect",

    /**
     * value: "createLoyaltyPointsEffect"
     * @const
     */
    "createLoyaltyPointsEffect": "createLoyaltyPointsEffect",

    /**
     * value: "redeemLoyaltyPointsEffect"
     * @const
     */
    "redeemLoyaltyPointsEffect": "redeemLoyaltyPointsEffect",

    /**
     * value: "callApi"
     * @const
     */
    "callApi": "callApi",

    /**
     * value: "awardGiveaway"
     * @const
     */
    "awardGiveaway": "awardGiveaway",

    /**
     * value: "addFreeItemEffect"
     * @const
     */
    "addFreeItemEffect": "addFreeItemEffect",

    /**
     * value: "reserveCoupon"
     * @const
     */
    "reserveCoupon": "reserveCoupon"
};


/**
 * Allowed values for the <code>period</code> property.
 * @enum {String}
 * @readonly
 */
SummaryCampaignStoreBudget['PeriodEnum'] = {

    /**
     * value: "overall"
     * @const
     */
    "overall": "overall",

    /**
     * value: "daily"
     * @const
     */
    "daily": "daily",

    /**
     * value: "weekly"
     * @const
     */
    "weekly": "weekly",

    /**
     * value: "monthly"
     * @const
     */
    "monthly": "monthly",

    /**
     * value: "yearly"
     * @const
     */
    "yearly": "yearly"
};



export default SummaryCampaignStoreBudget;

