/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WebhookAuthenticationWebhookRef from './WebhookAuthenticationWebhookRef';

/**
 * The WebhookAuthentication model module.
 * @module model/WebhookAuthentication
 * @version 25.15.0
 */
class WebhookAuthentication {
    /**
     * Constructs a new <code>WebhookAuthentication</code>.
     * @alias module:model/WebhookAuthentication
     * @param createdBy {String} The name of the user who created the webhook authentication.
     * @param modifiedBy {String} The name of the user who last modified the webhook authentication.
     * @param webhooks {Array.<module:model/WebhookAuthenticationWebhookRef>} 
     * @param name {String} The name of the webhook authentication.
     * @param type {module:model/WebhookAuthentication.TypeEnum} 
     * @param data {Object} 
     * @param id {Number} The internal ID of this entity.
     * @param created {Date} The time this entity was created.
     * @param modified {Date} The time this entity was last modified.
     */
    constructor(createdBy, modifiedBy, webhooks, name, type, data, id, created, modified) { 
        
        WebhookAuthentication.initialize(this, createdBy, modifiedBy, webhooks, name, type, data, id, created, modified);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdBy, modifiedBy, webhooks, name, type, data, id, created, modified) { 
        obj['createdBy'] = createdBy;
        obj['modifiedBy'] = modifiedBy;
        obj['webhooks'] = webhooks;
        obj['name'] = name;
        obj['type'] = type;
        obj['data'] = data;
        obj['id'] = id;
        obj['created'] = created;
        obj['modified'] = modified;
    }

    /**
     * Constructs a <code>WebhookAuthentication</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookAuthentication} obj Optional instance to populate.
     * @return {module:model/WebhookAuthentication} The populated <code>WebhookAuthentication</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookAuthentication();

            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('modifiedBy')) {
                obj['modifiedBy'] = ApiClient.convertToType(data['modifiedBy'], 'String');
            }
            if (data.hasOwnProperty('webhooks')) {
                obj['webhooks'] = ApiClient.convertToType(data['webhooks'], [WebhookAuthenticationWebhookRef]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], Object);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('modified')) {
                obj['modified'] = ApiClient.convertToType(data['modified'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * The name of the user who created the webhook authentication.
 * @member {String} createdBy
 */
WebhookAuthentication.prototype['createdBy'] = undefined;

/**
 * The name of the user who last modified the webhook authentication.
 * @member {String} modifiedBy
 */
WebhookAuthentication.prototype['modifiedBy'] = undefined;

/**
 * @member {Array.<module:model/WebhookAuthenticationWebhookRef>} webhooks
 */
WebhookAuthentication.prototype['webhooks'] = undefined;

/**
 * The name of the webhook authentication.
 * @member {String} name
 */
WebhookAuthentication.prototype['name'] = undefined;

/**
 * @member {module:model/WebhookAuthentication.TypeEnum} type
 */
WebhookAuthentication.prototype['type'] = undefined;

/**
 * @member {Object} data
 */
WebhookAuthentication.prototype['data'] = undefined;

/**
 * The internal ID of this entity.
 * @member {Number} id
 */
WebhookAuthentication.prototype['id'] = undefined;

/**
 * The time this entity was created.
 * @member {Date} created
 */
WebhookAuthentication.prototype['created'] = undefined;

/**
 * The time this entity was last modified.
 * @member {Date} modified
 */
WebhookAuthentication.prototype['modified'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
WebhookAuthentication['TypeEnum'] = {

    /**
     * value: "basic"
     * @const
     */
    "basic": "basic",

    /**
     * value: "custom"
     * @const
     */
    "custom": "custom"
};



export default WebhookAuthentication;

