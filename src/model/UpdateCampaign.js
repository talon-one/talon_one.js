/**
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CodeGeneratorSettings', 'model/LimitConfig'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CodeGeneratorSettings'), require('./LimitConfig'));
  } else {
    // Browser globals (root is window)
    if (!root.TalonOne) {
      root.TalonOne = {};
    }
    root.TalonOne.UpdateCampaign = factory(root.TalonOne.ApiClient, root.TalonOne.CodeGeneratorSettings, root.TalonOne.LimitConfig);
  }
}(this, function(ApiClient, CodeGeneratorSettings, LimitConfig) {
  'use strict';




  /**
   * The UpdateCampaign model module.
   * @module model/UpdateCampaign
   * @version 3.0.0
   */

  /**
   * Constructs a new <code>UpdateCampaign</code>.
   * @alias module:model/UpdateCampaign
   * @class
   * @param name {String} A friendly name for this campaign.
   * @param tags {Array.<String>} A list of tags for the campaign.
   * @param features {Array.<module:model/UpdateCampaign.FeaturesEnum>} A list of features for the campaign.
   * @param limits {Array.<module:model/LimitConfig>} The set of limits that will operate for this campaign
   */
  var exports = function(name, tags, features, limits) {
    var _this = this;

    _this['name'] = name;






    _this['tags'] = tags;
    _this['features'] = features;


    _this['limits'] = limits;
  };

  /**
   * Constructs a <code>UpdateCampaign</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UpdateCampaign} obj Optional instance to populate.
   * @return {module:model/UpdateCampaign} The populated <code>UpdateCampaign</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('startTime')) {
        obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
      }
      if (data.hasOwnProperty('endTime')) {
        obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
      }
      if (data.hasOwnProperty('attributes')) {
        obj['attributes'] = ApiClient.convertToType(data['attributes'], Object);
      }
      if (data.hasOwnProperty('state')) {
        obj['state'] = ApiClient.convertToType(data['state'], 'String');
      }
      if (data.hasOwnProperty('activeRulesetId')) {
        obj['activeRulesetId'] = ApiClient.convertToType(data['activeRulesetId'], 'Number');
      }
      if (data.hasOwnProperty('tags')) {
        obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
      }
      if (data.hasOwnProperty('features')) {
        obj['features'] = ApiClient.convertToType(data['features'], ['String']);
      }
      if (data.hasOwnProperty('couponSettings')) {
        obj['couponSettings'] = CodeGeneratorSettings.constructFromObject(data['couponSettings']);
      }
      if (data.hasOwnProperty('referralSettings')) {
        obj['referralSettings'] = CodeGeneratorSettings.constructFromObject(data['referralSettings']);
      }
      if (data.hasOwnProperty('limits')) {
        obj['limits'] = ApiClient.convertToType(data['limits'], [LimitConfig]);
      }
    }
    return obj;
  }

  /**
   * A friendly name for this campaign.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * A detailed description of the campaign.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * Datetime when the campaign will become active.
   * @member {Date} startTime
   */
  exports.prototype['startTime'] = undefined;
  /**
   * Datetime when the campaign will become in-active.
   * @member {Date} endTime
   */
  exports.prototype['endTime'] = undefined;
  /**
   * Arbitrary properties associated with this campaign
   * @member {Object} attributes
   */
  exports.prototype['attributes'] = undefined;
  /**
   * A disabled or archived campaign is not evaluated for rules or coupons. 
   * @member {module:model/UpdateCampaign.StateEnum} state
   * @default 'enabled'
   */
  exports.prototype['state'] = 'enabled';
  /**
   * ID of Ruleset this campaign applies on customer session evaluation.
   * @member {Number} activeRulesetId
   */
  exports.prototype['activeRulesetId'] = undefined;
  /**
   * A list of tags for the campaign.
   * @member {Array.<String>} tags
   */
  exports.prototype['tags'] = undefined;
  /**
   * A list of features for the campaign.
   * @member {Array.<module:model/UpdateCampaign.FeaturesEnum>} features
   */
  exports.prototype['features'] = undefined;
  /**
   * @member {module:model/CodeGeneratorSettings} couponSettings
   */
  exports.prototype['couponSettings'] = undefined;
  /**
   * @member {module:model/CodeGeneratorSettings} referralSettings
   */
  exports.prototype['referralSettings'] = undefined;
  /**
   * The set of limits that will operate for this campaign
   * @member {Array.<module:model/LimitConfig>} limits
   */
  exports.prototype['limits'] = undefined;


  /**
   * Allowed values for the <code>state</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StateEnum = {
    /**
     * value: "enabled"
     * @const
     */
    "enabled": "enabled",
    /**
     * value: "disabled"
     * @const
     */
    "disabled": "disabled",
    /**
     * value: "archived"
     * @const
     */
    "archived": "archived"  };

  /**
   * Allowed values for the <code>features</code> property.
   * @enum {String}
   * @readonly
   */
  exports.FeaturesEnum = {
    /**
     * value: "coupons"
     * @const
     */
    "coupons": "coupons",
    /**
     * value: "referrals"
     * @const
     */
    "referrals": "referrals",
    /**
     * value: "loyalty"
     * @const
     */
    "loyalty": "loyalty"  };


  return exports;
}));


