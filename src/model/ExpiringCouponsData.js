/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExpiringCouponsData model module.
 * @module model/ExpiringCouponsData
 * @version .0
 */
class ExpiringCouponsData {
    /**
     * Constructs a new <code>ExpiringCouponsData</code>.
     * @alias module:model/ExpiringCouponsData
     * @param couponValue {String} The coupon code.
     * @param campaignId {Number} The ID of the campaign to which the coupon belongs.
     * @param usageLimit {Number} The number of times the coupon code can be redeemed. `0` means unlimited redemptions but any campaign usage limits will still apply. 
     * @param usageCounter {Number} The number of times the coupon has been successfully redeemed.
     * @param attributes {Object} Custom attributes associated with this coupon.
     */
    constructor(couponValue, campaignId, usageLimit, usageCounter, attributes) { 
        
        ExpiringCouponsData.initialize(this, couponValue, campaignId, usageLimit, usageCounter, attributes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, couponValue, campaignId, usageLimit, usageCounter, attributes) { 
        obj['CouponValue'] = couponValue;
        obj['CampaignId'] = campaignId;
        obj['UsageLimit'] = usageLimit;
        obj['UsageCounter'] = usageCounter;
        obj['Attributes'] = attributes;
    }

    /**
     * Constructs a <code>ExpiringCouponsData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExpiringCouponsData} obj Optional instance to populate.
     * @return {module:model/ExpiringCouponsData} The populated <code>ExpiringCouponsData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExpiringCouponsData();

            if (data.hasOwnProperty('CouponValue')) {
                obj['CouponValue'] = ApiClient.convertToType(data['CouponValue'], 'String');
            }
            if (data.hasOwnProperty('CreatedDate')) {
                obj['CreatedDate'] = ApiClient.convertToType(data['CreatedDate'], 'Date');
            }
            if (data.hasOwnProperty('ValidFrom')) {
                obj['ValidFrom'] = ApiClient.convertToType(data['ValidFrom'], 'Date');
            }
            if (data.hasOwnProperty('ValidUntil')) {
                obj['ValidUntil'] = ApiClient.convertToType(data['ValidUntil'], 'Date');
            }
            if (data.hasOwnProperty('CampaignId')) {
                obj['CampaignId'] = ApiClient.convertToType(data['CampaignId'], 'Number');
            }
            if (data.hasOwnProperty('CustomerProfileId')) {
                obj['CustomerProfileId'] = ApiClient.convertToType(data['CustomerProfileId'], 'String');
            }
            if (data.hasOwnProperty('UsageLimit')) {
                obj['UsageLimit'] = ApiClient.convertToType(data['UsageLimit'], 'Number');
            }
            if (data.hasOwnProperty('UsageCounter')) {
                obj['UsageCounter'] = ApiClient.convertToType(data['UsageCounter'], 'Number');
            }
            if (data.hasOwnProperty('BatchId')) {
                obj['BatchId'] = ApiClient.convertToType(data['BatchId'], 'String');
            }
            if (data.hasOwnProperty('Attributes')) {
                obj['Attributes'] = ApiClient.convertToType(data['Attributes'], Object);
            }
        }
        return obj;
    }


}

/**
 * The coupon code.
 * @member {String} CouponValue
 */
ExpiringCouponsData.prototype['CouponValue'] = undefined;

/**
 * Timestamp at which point the coupon was created.
 * @member {Date} CreatedDate
 */
ExpiringCouponsData.prototype['CreatedDate'] = undefined;

/**
 * Timestamp at which point the coupon becomes valid.
 * @member {Date} ValidFrom
 */
ExpiringCouponsData.prototype['ValidFrom'] = undefined;

/**
 * Timestamp at which point the coupon expires. Coupon never expires if this is omitted, zero, or negative.
 * @member {Date} ValidUntil
 */
ExpiringCouponsData.prototype['ValidUntil'] = undefined;

/**
 * The ID of the campaign to which the coupon belongs.
 * @member {Number} CampaignId
 */
ExpiringCouponsData.prototype['CampaignId'] = undefined;

/**
 * The Integration ID of the customer that is allowed to redeem this coupon.
 * @member {String} CustomerProfileId
 */
ExpiringCouponsData.prototype['CustomerProfileId'] = undefined;

/**
 * The number of times the coupon code can be redeemed. `0` means unlimited redemptions but any campaign usage limits will still apply. 
 * @member {Number} UsageLimit
 */
ExpiringCouponsData.prototype['UsageLimit'] = undefined;

/**
 * The number of times the coupon has been successfully redeemed.
 * @member {Number} UsageCounter
 */
ExpiringCouponsData.prototype['UsageCounter'] = undefined;

/**
 * The ID of the batch the coupon belongs to.
 * @member {String} BatchId
 */
ExpiringCouponsData.prototype['BatchId'] = undefined;

/**
 * Custom attributes associated with this coupon.
 * @member {Object} Attributes
 */
ExpiringCouponsData.prototype['Attributes'] = undefined;






export default ExpiringCouponsData;

