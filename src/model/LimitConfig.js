/**
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LimitConfig model module.
 * @module model/LimitConfig
 * @version 4.1.0
 */
class LimitConfig {
    /**
     * Constructs a new <code>LimitConfig</code>.
     * @alias module:model/LimitConfig
     * @param action {module:model/LimitConfig.ActionEnum} The limitable action to which this limit will be applied
     * @param limit {Number} The value to set for the limit
     * @param entities {Array.<module:model/LimitConfig.EntitiesEnum>} The entities that make the address of this limit
     */
    constructor(action, limit, entities) { 
        
        LimitConfig.initialize(this, action, limit, entities);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action, limit, entities) { 
        obj['action'] = action;
        obj['limit'] = limit;
        obj['entities'] = entities;
    }

    /**
     * Constructs a <code>LimitConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LimitConfig} obj Optional instance to populate.
     * @return {module:model/LimitConfig} The populated <code>LimitConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LimitConfig();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('entities')) {
                obj['entities'] = ApiClient.convertToType(data['entities'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * The limitable action to which this limit will be applied
 * @member {module:model/LimitConfig.ActionEnum} action
 */
LimitConfig.prototype['action'] = undefined;

/**
 * The value to set for the limit
 * @member {Number} limit
 */
LimitConfig.prototype['limit'] = undefined;

/**
 * The entities that make the address of this limit
 * @member {Array.<module:model/LimitConfig.EntitiesEnum>} entities
 */
LimitConfig.prototype['entities'] = undefined;





/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
LimitConfig['ActionEnum'] = {

    /**
     * value: "redeemCoupon"
     * @const
     */
    "redeemCoupon": "redeemCoupon",

    /**
     * value: "redeemReferral"
     * @const
     */
    "redeemReferral": "redeemReferral",

    /**
     * value: "setDiscount"
     * @const
     */
    "setDiscount": "setDiscount",

    /**
     * value: "createCoupon"
     * @const
     */
    "createCoupon": "createCoupon",

    /**
     * value: "setDiscountEffect"
     * @const
     */
    "setDiscountEffect": "setDiscountEffect"
};


/**
 * Allowed values for the <code>entities</code> property.
 * @enum {String}
 * @readonly
 */
LimitConfig['EntitiesEnum'] = {

    /**
     * value: "Coupon"
     * @const
     */
    "Coupon": "Coupon",

    /**
     * value: "Referral"
     * @const
     */
    "Referral": "Referral",

    /**
     * value: "Profile"
     * @const
     */
    "Profile": "Profile",

    /**
     * value: "Identifier"
     * @const
     */
    "Identifier": "Identifier"
};



export default LimitConfig;

