/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExpiringCardPointsData from './ExpiringCardPointsData';

/**
 * The ExpiringCardPointsNotification model module.
 * @module model/ExpiringCardPointsNotification
 * @version .0
 */
class ExpiringCardPointsNotification {
    /**
     * Constructs a new <code>ExpiringCardPointsNotification</code>.
     * @alias module:model/ExpiringCardPointsNotification
     * @param totalResultSize {Number} 
     * @param data {Array.<module:model/ExpiringCardPointsData>} The array of expiring points.
     * @param notificationType {module:model/ExpiringCardPointsNotification.NotificationTypeEnum} The type of notification.
     */
    constructor(totalResultSize, data, notificationType) { 
        
        ExpiringCardPointsNotification.initialize(this, totalResultSize, data, notificationType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, totalResultSize, data, notificationType) { 
        obj['TotalResultSize'] = totalResultSize;
        obj['Data'] = data;
        obj['NotificationType'] = notificationType;
    }

    /**
     * Constructs a <code>ExpiringCardPointsNotification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExpiringCardPointsNotification} obj Optional instance to populate.
     * @return {module:model/ExpiringCardPointsNotification} The populated <code>ExpiringCardPointsNotification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExpiringCardPointsNotification();

            if (data.hasOwnProperty('TotalResultSize')) {
                obj['TotalResultSize'] = ApiClient.convertToType(data['TotalResultSize'], 'Number');
            }
            if (data.hasOwnProperty('Data')) {
                obj['Data'] = ApiClient.convertToType(data['Data'], [ExpiringCardPointsData]);
            }
            if (data.hasOwnProperty('NotificationType')) {
                obj['NotificationType'] = ApiClient.convertToType(data['NotificationType'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} TotalResultSize
 */
ExpiringCardPointsNotification.prototype['TotalResultSize'] = undefined;

/**
 * The array of expiring points.
 * @member {Array.<module:model/ExpiringCardPointsData>} Data
 */
ExpiringCardPointsNotification.prototype['Data'] = undefined;

/**
 * The type of notification.
 * @member {module:model/ExpiringCardPointsNotification.NotificationTypeEnum} NotificationType
 */
ExpiringCardPointsNotification.prototype['NotificationType'] = undefined;





/**
 * Allowed values for the <code>NotificationType</code> property.
 * @enum {String}
 * @readonly
 */
ExpiringCardPointsNotification['NotificationTypeEnum'] = {

    /**
     * value: "LoyaltyCardPointsExpiring"
     * @const
     */
    "LoyaltyCardPointsExpiring": "LoyaltyCardPointsExpiring"
};



export default ExpiringCardPointsNotification;

