/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PriceDetail model module.
 * @module model/PriceDetail
 * @version 25.15.0
 */
class PriceDetail {
    /**
     * Constructs a new <code>PriceDetail</code>.
     * @alias module:model/PriceDetail
     */
    constructor() { 
        
        PriceDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PriceDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PriceDetail} obj Optional instance to populate.
     * @return {module:model/PriceDetail} The populated <code>PriceDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PriceDetail();

            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('adjustmentReferenceId')) {
                obj['adjustmentReferenceId'] = ApiClient.convertToType(data['adjustmentReferenceId'], 'String');
            }
            if (data.hasOwnProperty('adjustmentEffectiveFrom')) {
                obj['adjustmentEffectiveFrom'] = ApiClient.convertToType(data['adjustmentEffectiveFrom'], 'Date');
            }
            if (data.hasOwnProperty('adjustmentEffectiveUntil')) {
                obj['adjustmentEffectiveUntil'] = ApiClient.convertToType(data['adjustmentEffectiveUntil'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * The value of this price type.
 * @member {Number} price
 */
PriceDetail.prototype['price'] = undefined;

/**
 * The reference identifier of the selected price adjustment for this SKU.
 * @member {String} adjustmentReferenceId
 */
PriceDetail.prototype['adjustmentReferenceId'] = undefined;

/**
 * The date and time from which the price adjustment is effective.
 * @member {Date} adjustmentEffectiveFrom
 */
PriceDetail.prototype['adjustmentEffectiveFrom'] = undefined;

/**
 * The date and time until which the price adjustment is effective.
 * @member {Date} adjustmentEffectiveUntil
 */
PriceDetail.prototype['adjustmentEffectiveUntil'] = undefined;






export default PriceDetail;

