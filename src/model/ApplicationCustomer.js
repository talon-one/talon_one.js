/**
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/LoyaltyMembership'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./LoyaltyMembership'));
  } else {
    // Browser globals (root is window)
    if (!root.TalonOne) {
      root.TalonOne = {};
    }
    root.TalonOne.ApplicationCustomer = factory(root.TalonOne.ApiClient, root.TalonOne.LoyaltyMembership);
  }
}(this, function(ApiClient, LoyaltyMembership) {
  'use strict';




  /**
   * The ApplicationCustomer model module.
   * @module model/ApplicationCustomer
   * @version 3.3.0
   */

  /**
   * Constructs a new <code>ApplicationCustomer</code>.
   * 
   * @alias module:model/ApplicationCustomer
   * @class
   * @param id {Number} Unique ID for this entity.
   * @param created {Date} The exact moment this entity was created. The exact moment this entity was created. The exact moment this entity was created.
   * @param integrationId {String} The ID used for this entity in the application system. The ID used for this entity in the application system.
   * @param attributes {Object} Arbitrary properties associated with this item
   * @param accountId {Number} The ID of the Talon.One account that owns this profile. The ID of the Talon.One account that owns this profile.
   * @param closedSessions {Number} The total amount of closed sessions by a customer. A closed session is a successful purchase.
   * @param totalSales {Number} Sum of all purchases made by this customer
   * @param lastActivity {Date} Timestamp of the most recent event received from this customer
   */
  var exports = function(id, created, integrationId, attributes, accountId, closedSessions, totalSales, lastActivity) {
    var _this = this;

    _this['id'] = id;
    _this['created'] = created;
    _this['integrationId'] = integrationId;
    _this['attributes'] = attributes;
    _this['accountId'] = accountId;
    _this['closedSessions'] = closedSessions;
    _this['totalSales'] = totalSales;

    _this['lastActivity'] = lastActivity;
  };

  /**
   * Constructs a <code>ApplicationCustomer</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ApplicationCustomer} obj Optional instance to populate.
   * @return {module:model/ApplicationCustomer} The populated <code>ApplicationCustomer</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('created')) {
        obj['created'] = ApiClient.convertToType(data['created'], 'Date');
      }
      if (data.hasOwnProperty('integrationId')) {
        obj['integrationId'] = ApiClient.convertToType(data['integrationId'], 'String');
      }
      if (data.hasOwnProperty('attributes')) {
        obj['attributes'] = ApiClient.convertToType(data['attributes'], Object);
      }
      if (data.hasOwnProperty('accountId')) {
        obj['accountId'] = ApiClient.convertToType(data['accountId'], 'Number');
      }
      if (data.hasOwnProperty('closedSessions')) {
        obj['closedSessions'] = ApiClient.convertToType(data['closedSessions'], 'Number');
      }
      if (data.hasOwnProperty('totalSales')) {
        obj['totalSales'] = ApiClient.convertToType(data['totalSales'], 'Number');
      }
      if (data.hasOwnProperty('loyaltyMemberships')) {
        obj['loyaltyMemberships'] = ApiClient.convertToType(data['loyaltyMemberships'], [LoyaltyMembership]);
      }
      if (data.hasOwnProperty('lastActivity')) {
        obj['lastActivity'] = ApiClient.convertToType(data['lastActivity'], 'Date');
      }
    }
    return obj;
  }

  /**
   * Unique ID for this entity.
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The exact moment this entity was created. The exact moment this entity was created. The exact moment this entity was created.
   * @member {Date} created
   */
  exports.prototype['created'] = undefined;
  /**
   * The ID used for this entity in the application system. The ID used for this entity in the application system.
   * @member {String} integrationId
   */
  exports.prototype['integrationId'] = undefined;
  /**
   * Arbitrary properties associated with this item
   * @member {Object} attributes
   */
  exports.prototype['attributes'] = undefined;
  /**
   * The ID of the Talon.One account that owns this profile. The ID of the Talon.One account that owns this profile.
   * @member {Number} accountId
   */
  exports.prototype['accountId'] = undefined;
  /**
   * The total amount of closed sessions by a customer. A closed session is a successful purchase.
   * @member {Number} closedSessions
   */
  exports.prototype['closedSessions'] = undefined;
  /**
   * Sum of all purchases made by this customer
   * @member {Number} totalSales
   */
  exports.prototype['totalSales'] = undefined;
  /**
   * A list of loyalty programs joined by the customer
   * @member {Array.<module:model/LoyaltyMembership>} loyaltyMemberships
   */
  exports.prototype['loyaltyMemberships'] = undefined;
  /**
   * Timestamp of the most recent event received from this customer
   * @member {Date} lastActivity
   */
  exports.prototype['lastActivity'] = undefined;



  return exports;
}));


