/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProjectedTier from './ProjectedTier';
import Tier from './Tier';

/**
 * The LoyaltyBalanceWithTier model module.
 * @module model/LoyaltyBalanceWithTier
 * @version 9.0.0
 */
class LoyaltyBalanceWithTier {
    /**
     * Constructs a new <code>LoyaltyBalanceWithTier</code>.
     * 
     * @alias module:model/LoyaltyBalanceWithTier
     */
    constructor() { 
        
        LoyaltyBalanceWithTier.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LoyaltyBalanceWithTier</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoyaltyBalanceWithTier} obj Optional instance to populate.
     * @return {module:model/LoyaltyBalanceWithTier} The populated <code>LoyaltyBalanceWithTier</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoyaltyBalanceWithTier();

            if (data.hasOwnProperty('activePoints')) {
                obj['activePoints'] = ApiClient.convertToType(data['activePoints'], 'Number');
            }
            if (data.hasOwnProperty('pendingPoints')) {
                obj['pendingPoints'] = ApiClient.convertToType(data['pendingPoints'], 'Number');
            }
            if (data.hasOwnProperty('spentPoints')) {
                obj['spentPoints'] = ApiClient.convertToType(data['spentPoints'], 'Number');
            }
            if (data.hasOwnProperty('expiredPoints')) {
                obj['expiredPoints'] = ApiClient.convertToType(data['expiredPoints'], 'Number');
            }
            if (data.hasOwnProperty('currentTier')) {
                obj['currentTier'] = Tier.constructFromObject(data['currentTier']);
            }
            if (data.hasOwnProperty('projectedTier')) {
                obj['projectedTier'] = ProjectedTier.constructFromObject(data['projectedTier']);
            }
            if (data.hasOwnProperty('pointsToNextTier')) {
                obj['pointsToNextTier'] = ApiClient.convertToType(data['pointsToNextTier'], 'Number');
            }
            if (data.hasOwnProperty('nextTierName')) {
                obj['nextTierName'] = ApiClient.convertToType(data['nextTierName'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Total amount of points awarded to this customer and available to spend.
 * @member {Number} activePoints
 */
LoyaltyBalanceWithTier.prototype['activePoints'] = undefined;

/**
 * Total amount of points awarded to this customer but not available until their start date.
 * @member {Number} pendingPoints
 */
LoyaltyBalanceWithTier.prototype['pendingPoints'] = undefined;

/**
 * Total amount of points already spent by this customer.
 * @member {Number} spentPoints
 */
LoyaltyBalanceWithTier.prototype['spentPoints'] = undefined;

/**
 * Total amount of points awarded but never redeemed. They cannot be used anymore.
 * @member {Number} expiredPoints
 */
LoyaltyBalanceWithTier.prototype['expiredPoints'] = undefined;

/**
 * @member {module:model/Tier} currentTier
 */
LoyaltyBalanceWithTier.prototype['currentTier'] = undefined;

/**
 * @member {module:model/ProjectedTier} projectedTier
 */
LoyaltyBalanceWithTier.prototype['projectedTier'] = undefined;

/**
 * The number of points required to move up a tier.
 * @member {Number} pointsToNextTier
 */
LoyaltyBalanceWithTier.prototype['pointsToNextTier'] = undefined;

/**
 * The name of the tier consecutive to the current tier.
 * @member {String} nextTierName
 */
LoyaltyBalanceWithTier.prototype['nextTierName'] = undefined;






export default LoyaltyBalanceWithTier;

