/**
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RollbackDiscountEffectProps model module.
 * @module model/RollbackDiscountEffectProps
 * @version 5.0.0
 */
class RollbackDiscountEffectProps {
    /**
     * Constructs a new <code>RollbackDiscountEffectProps</code>.
     * The properties specific to the \&quot;rollbackDiscount\&quot; effect. This gets triggered whenever previously closed session is now cancelled or partially returned and a setDiscount effect was cancelled on our internal discount limit counters.
     * @alias module:model/RollbackDiscountEffectProps
     * @param name {String} The name of the \"setDiscount\" effect that was rolled back.
     * @param value {Number} The value of the discount that was rolled back.
     */
    constructor(name, value) { 
        
        RollbackDiscountEffectProps.initialize(this, name, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, value) { 
        obj['name'] = name;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>RollbackDiscountEffectProps</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RollbackDiscountEffectProps} obj Optional instance to populate.
     * @return {module:model/RollbackDiscountEffectProps} The populated <code>RollbackDiscountEffectProps</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RollbackDiscountEffectProps();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
            if (data.hasOwnProperty('cartItemPosition')) {
                obj['cartItemPosition'] = ApiClient.convertToType(data['cartItemPosition'], 'Number');
            }
            if (data.hasOwnProperty('cartItemSubPosition')) {
                obj['cartItemSubPosition'] = ApiClient.convertToType(data['cartItemSubPosition'], 'Number');
            }
            if (data.hasOwnProperty('additionalCostId')) {
                obj['additionalCostId'] = ApiClient.convertToType(data['additionalCostId'], 'Number');
            }
            if (data.hasOwnProperty('additionalCost')) {
                obj['additionalCost'] = ApiClient.convertToType(data['additionalCost'], 'String');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The name of the \"setDiscount\" effect that was rolled back.
 * @member {String} name
 */
RollbackDiscountEffectProps.prototype['name'] = undefined;

/**
 * The value of the discount that was rolled back.
 * @member {Number} value
 */
RollbackDiscountEffectProps.prototype['value'] = undefined;

/**
 * The index of the item in the cart items for which the discount was rolled back.
 * @member {Number} cartItemPosition
 */
RollbackDiscountEffectProps.prototype['cartItemPosition'] = undefined;

/**
 * The index of the item unit in its line item. It is only used for cart items with `quantity` > 1 and is only returned when cart item flattening is enabled. 
 * @member {Number} cartItemSubPosition
 */
RollbackDiscountEffectProps.prototype['cartItemSubPosition'] = undefined;

/**
 * The ID of the additional cost that was rolled back.
 * @member {Number} additionalCostId
 */
RollbackDiscountEffectProps.prototype['additionalCostId'] = undefined;

/**
 * The name of the additional cost that was rolled back.
 * @member {String} additionalCost
 */
RollbackDiscountEffectProps.prototype['additionalCost'] = undefined;

/**
 * The scope of the rolled back discount - For a discount per session, it can be one of `cartItems`, `additionalCosts` or `sessionTotal` - For a discount per item, it can be one of `price`, `additionalCosts` or `itemTotal` 
 * @member {String} scope
 */
RollbackDiscountEffectProps.prototype['scope'] = undefined;






export default RollbackDiscountEffectProps;

